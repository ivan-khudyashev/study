/*
Copyright (C) 2018, Khudyashev Ivan, bahek1983@gmail.com
*/
%skeleton "lalr1.cc"
%defines
%define api.value.type variant
%define api.namespace {ivns}
%token <int> HELLO_TOKEN
%token <int> ID_TOKEN
%token <int> COMMA_TOKEN
%{
#include <iostream>
#include <string>
/* First define YY_DECL for Lexer
   And second declare YY_DECL for Parser
*/
#undef YY_DECL
#define YY_DECL ivns::parser::symbol_type \
    yyFlexLexer::yylex(ivns::parser::semantic_type*)
YY_DECL;
%}
%%
root:   HELLO_TOKEN COMMA_TOKEN ID_TOKEN
%%
void ivns::parser::error(const std::string& s) {
    std::cerr << std::endl << "Error when parsing:" << s << std::endl;
}
int main(void) {
    ivns::parser p = ivns::parser::parser();
    res = p.parse();
    std::cout << "Successfully parsed. Result = " << res;
    return 0;
}
